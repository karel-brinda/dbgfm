 
---------------------------------------------------------------------
This is the README file for the bwtdisk library for the computation of 
the BWT in external memory. The whole bwtdisk library is available 
under the GNU General Public License.

    Copyright (C) 2010  Giovanni Manzini

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.


This library is based on the algorithms described in the paper 
 
    Lightweight Data Indexing and Compression in External Memory 
    by P. Ferragina, T. Gagie, G. Manzini, 
    Proceeding of the 9th Latin America symposium on Theoretical 
    Informatics (LATIN 2010), Oaxaca, Mexico, 2010.


This library includes the source code of the following free tools:

    libdivsufsort-lite 
    by Yuta Mori       
    (internal memory suffix sorting)
    
    qsufsort 
    by Jesper Larsson 
    (internal memory suffix sorting)

    lzmadec
    by Igor Pavlov, Ville Koskinen, Lasse Collin 
    (read access to lzma compressed files)

    carryless rangecoder
    by Dmitry Subbotin, C version by Mikael Lundqvist
    (arithmetic-coding-like compression and decompression)
  
see the copyright notices in the respective source files.


 Ver 0.
---------------------------------------------------------------------- 


* COMPILATION *

To compile you need gcc, make, and the zlib library (http://www.zlib.net/).

1. Look at the make_options file and change the compilation options if you
   know what you are doing.  

2. Type "make" with no arguments to compile the tools and the library. 
   Using gcc 4.2.3 and 4.2.4 the compilation produces no warnings, so if 
   you get any don't dismiss them lightly.

The library was tested only under linux: every effort was done to make it
portable and testing under Windows and Mac is under way. 


* SAMPLE RUNS *

1. Type
     ./bwte COPYING
   this should produce the files COPYING.bwt of 32490 bytes and 
   COPYING.bwt.aux of 2048 bytes

2. Type 
     ./unbwti COPYING.bwt 
   this produce the file COPYING.bwt.twb that should be identical to COPYING

3. Given the compressed file filename.gz exists, type 
     ./bwte -m 400 -t1 -b2 -y65536 -z256 filename.gz
   to compute the bwt of filename using 400 MB of RAM. 
   The output file will be filename.gz.bwt.rrc. In this example both the input
   and the output file are compressed.

Meaning of the options:

-m 400:  use 400MB of internal memory. 

-t1:     assume that the input is in gzip format

-b2 -y65536 -z256: compress the bwt using range coding with parameters 
                   MaxFreq=65536 and Increment=256 (fast adaptation)


* ADDITIONAL INFO *

  The complete documentation is in the doc subdirectory.

